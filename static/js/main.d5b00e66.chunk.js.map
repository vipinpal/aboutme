{"version":3,"sources":["component/MainMenu/WorkExperience.comopnent.js","containers/MainMenu/MainMenu.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","marginBottom","header","fontSize","fontWeight","position","color","headerPaddingBottom","paddingBottom","headerIcon","headerTitle","margin","chip","backgroundColor","subHeaderTitle","opacity","subHeaderContant","display","alignItems","justifyContent","subHeaderTime","padding","WorkExperienceComponent","props","type","classes","data","Card","className","CardContent","isContant","icon","WorkRounded","SchoolRounded","AssignmentRounded","title","style","paddingLeft","contant","map","d","i","key","Divider","DateRangeRounded","date","isCurrent","Chip","label","image","name","tech","info","themeColor","top","height","media","paddingTop","grid","overflowX","center","RecipeReviewCard","matches","useMediaQuery","Grid","container","item","xs","sm","xl","lg","md","CardMedia","List","ListItem","ListItemAvatar","ListItemText","primary","secondary","HomeRounded","EmailRounded","PhoneRounded","LaptopMacRounded","t","LanguageRounded","LinkedIn","onClick","window","open","GitHub","Twitter","marginTop","CardHeader","subheader","Typography","variant","component","CardActions","disableSpacing","IconButton","aria-label","Favorite","Share","React","createContext","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d5b00e66.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardContent, Divider, Chip } from '@material-ui/core';\nimport { WorkRounded, DateRangeRounded, SchoolRounded, AssignmentRounded } from '@material-ui/icons';\n\nconst themeColor = '#009688';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginBottom: 30,\n    },\n    header: {\n        fontSize: 30,\n        fontWeight: 400,\n        position: 'relative',\n        color: themeColor,\n    },\n    headerPaddingBottom: {\n        paddingBottom: 15,\n    },\n    headerIcon: {\n        fontSize: 40,\n    },\n    headerTitle: {\n        position: 'absolute',\n        margin: '5px 0 0 10px',\n        color: themeColor,\n    },\n    chip: {\n        backgroundColor: themeColor,\n        color: '#fff',\n    },\n    subHeaderTitle: {\n        color: '#000',\n        opacity: 0.6,\n        fontSize: 18,\n        fontWeight: 400,\n        margin: 0,\n    },\n    subHeaderContant: {\n        margin: '10px 0',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        color: themeColor,\n    },\n    subHeaderTime: {\n        padding: '4px 0 0 10px',\n        color: themeColor,\n    },\n}));\n\nconst getIcon = (type, headerIcon) => {\n    if(type === 'WorkRounded') {\n        return <WorkRounded className={headerIcon} />\n    } else if (type === 'SchoolRounded') {\n        return <SchoolRounded className={headerIcon} />\n    } else if (type === 'AssignmentRounded') {\n        return <AssignmentRounded className={headerIcon} />\n    }\n};\n\nfunction WorkExperienceComponent(props) {\n    const classes = useStyles();\n    const data = props.data;\n    return (\n        <Card className={classes.root}>\n            <CardContent>\n                <div className={`${classes.header} ${data.isContant ? classes.headerPaddingBottom : ''}`}>\n                    {getIcon(data.header.icon, classes.headerIcon)}\n                    <span className={classes.headerTitle}>{data.header.title}</span>\n                </div>\n                <div style={{ paddingLeft: 15 }}>\n                {data.isContant && data.contant.map((d, i) => {\n                    return (\n                        <Fragment key={d.title}>\n                            {i !== 0 && <Divider style={{ margin: '24px 0 40px 0'}}/>}\n                            <h5 className={classes.subHeaderTitle}><b>{d.title}</b></h5>\n                            <div className={classes.subHeaderContant}>\n                                <DateRangeRounded />\n                                <span className={classes.subHeaderTime}>\n                                    {d.date}{d.isCurrent && <Chip className={classes.chip} style={{ margin: 0 }} label={\"Current\"} />}\n                                </span>\n                            </div>\n                            <div>{d.data}</div>\n                        </Fragment>\n                    )\n                })}\n                </div>\n            </CardContent>\n        </Card>\n    )\n}\n\nexport default WorkExperienceComponent;\n","import React, { Fragment } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Grid, Chip, CardHeader, CardActions, Typography, IconButton, useMediaQuery } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport {\n    WorkRounded,\n    LanguageRounded,\n    HomeRounded,\n    EmailRounded,\n    PhoneRounded,\n    LaptopMacRounded,\n    LinkedIn,\n    GitHub,\n    Twitter,\n    Favorite,\n    Share,\n} from '@material-ui/icons';\n\nimport WorkExperienceComponent from './../../component/MainMenu/WorkExperience.comopnent'\n\nconst themeColor = '#009688';\n\n\nconst data= {\n        image: 'https://scontent-maa2-1.xx.fbcdn.net/v/t1.0-9/92848436_3004369792957899_2076351894292267008_o.jpg?_nc_cat=109&_nc_sid=8024bb&_nc_ohc=K6nkMxbhMHUAX85R2tT&_nc_ht=scontent-maa2-1.xx&oh=d4b5a2c332af7069088ab148c78e5198&oe=5EB6D615',\n        name: 'Vipin Kumar',\n        tech: ['Javascript', 'Node.js', 'React.js', 'Angular.js', 'TypeScript', 'Html', 'Css', 'Aws', 'MongoDb', 'Redis'],\n        info: [{\n        header: {\n            icon: 'WorkRounded',\n            title: 'Work Experience',\n        },\n        isContant: true,\n        contant: [{\n            title: 'Full Stack Developer / datamatics.com',\n            date: 'Apr 2017 - ',\n            isCurrent: true,\n            data: 'Lorem ipsum dolor sit amet. Praesentium magnam consectetur vel in deserunt aspernatur est reprehenderit sunt hic. Nulla tempora soluta ea et odio, unde doloremque repellendus iure, iste.'\n        },\n        {\n            title: 'Full Stack Developer / noesyssoftware.com',\n            date: 'Dec 2015 - Apr 2017',\n            isCurrent: false,\n            data: 'Lorem ipsum dolor sit amet. Praesentium magnam consectetur vel in deserunt aspernatur est reprehenderit sunt hic. Nulla tempora soluta ea et odio, unde doloremque repellendus iure, iste.'\n        }],\n    }, {\n        header: {\n            icon: 'SchoolRounded',\n            title: 'Education',\n        },\n        isContant: true,\n        contant: [{\n            title: 'Jaypee Institute of Information Technology, Noida',\n            date: 'Jul 2011 - May 2015',\n            isCurrent: false,\n            data: 'Bachelor Degree'\n        }]\n    },\n    {\n        header: {\n            icon: 'AssignmentRounded',\n            title: 'Projects',\n        },\n        isContant: false,\n    }],\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {},\n    themeColor: {\n        color: themeColor,\n    },\n    name: {\n        fontSize: 30,\n        fontWeight: 600,\n        position: 'relative',\n        top: -60,\n        height: 0,\n        color: themeColor,\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    },\n    grid: {\n        height: '95vh',\n        overflowX: 'hidden'\n    },\n    chip: {\n        margin: 5,\n        backgroundColor: themeColor,\n        color: '#fff',\n    },\n    center: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        paddingTop: 30,\n        color: themeColor,\n    }\n}));\n\nexport default function RecipeReviewCard() {\n    const classes = useStyles();\n\n    const matches = useMediaQuery('(min-width:600px)');\n    return (\n        <Fragment>\n            <Grid\n                container\n            >\n                <Grid item xs={12} sm={6} xl={3} lg={3} md={3}>\n                    <Card className={classes.root}>\n                        <CardMedia className={classes.media} image={data.image} title={data.name} />\n                        <CardContent>\n                        <div className={classes.name}>{data.name}</div>\n                        <List>\n                            <ListItem>\n                                <ListItemAvatar><WorkRounded className={classes.themeColor} /></ListItemAvatar>\n                                <ListItemText primary=\"Developer\" secondary=\"Techjini.com\" />\n                            </ListItem>\n                            <ListItem>\n                                <ListItemAvatar><HomeRounded className={classes.themeColor}/></ListItemAvatar>\n                                <ListItemText primary=\"Bengaluru\" secondary=\"Dec 15, 2015\" />\n                            </ListItem>\n                            <ListItem>\n                                <ListItemAvatar><EmailRounded className={classes.themeColor}/></ListItemAvatar>\n                                <ListItemText primary=\"vip1509ku@gmail.com\" />\n                            </ListItem>\n                            <ListItem>\n                                <ListItemAvatar><PhoneRounded className={classes.themeColor}/></ListItemAvatar>\n                                <ListItemText primary=\"+91 - 8884702587\" />\n                            </ListItem>\n                            <ListItem>\n                                <ListItemAvatar><LaptopMacRounded className={classes.themeColor}/></ListItemAvatar>\n                                <ListItemText primary=\"Skills\" />\n                            </ListItem>\n                            <ListItem>\n                                    <ListItemAvatar><div /></ListItemAvatar>\n                                    <ListItemText>{data.tech.map(t => <Chip key={t} className={classes.chip} label={t} />)}</ListItemText>\n                            </ListItem>\n                            <ListItem>\n                                <ListItemAvatar>\n                                    <LanguageRounded className={classes.themeColor}/>\n                                </ListItemAvatar>\n                                <ListItemText primary=\"Languages\" secondary=\"Hindi, English\"  />\n                            </ListItem>\n                        </List>\n                        <div className={classes.center}>\n                            <LinkedIn onClick={() => window.open(\"https://www.linkedin.com/in/vip1509ku/\")}/>\n                            <GitHub onClick={() => window.open(\"https://github.com/vipinpal\")} />\n                            <Twitter onClick={() => window.open(\"https://twitter.com/vipin_k1\")} />\n                        </div>\n                        </CardContent>\n                    </Card>\n                </Grid>\n                <Grid item xs={12} sm={6} xl={9} lg={9} md={9} className={classes.grid} style={{ marginTop: matches ? 0 : 20 }}>\n                    <div style={{ backgroundColor: 'inherit', paddingLeft: matches ? 14 : 0}}>\n                       {data.info.map(d => <WorkExperienceComponent data={d} />)}\n                    <Card className={classes.root}>\n                        <CardHeader\n                            title=\"Spireon\"\n                            subheader=\"September 14, 2016\"\n                        />\n                        <CardContent>\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            This impressive paella is a perfect party dish and a fun meal to cook together with your\n                            guests. Add 1 cup of frozen peas along with the mussels, if you like.\n                            </Typography>\n                        </CardContent>\n                        <CardActions disableSpacing>\n                            <IconButton aria-label=\"add to favorites\">\n                            <Favorite />\n                            </IconButton>\n                            <IconButton aria-label=\"share\">\n                            <Share />\n                            </IconButton>\n                        </CardActions>\n                        </Card>\n                        \n                    </div>\n                </Grid>\n            </Grid>\n        </Fragment>\n    );\n}\n","import React from 'react';\nimport './App.css';\nimport MainDrawer from './containers/MainMenu/MainMenu';\n\n\nexport const Context = React.createContext({\n  name: 'Vipin Pal'\n});\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainDrawer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}